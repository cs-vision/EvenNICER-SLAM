coarse: True
sync_method: strict
# sync_method: free # for debugging
scale: 1
verbose: True
occupancy: True
low_gpu_mem: True
grid_len:
  coarse: 2 
  middle: 0.32 
  fine: 0.16
  color: 0.16
  bound_divisible: 0.32
pretrained_decoders:
  coarse: pretrained/coarse.pt
  middle_fine: pretrained/middle_fine.pt # one ckpt contain both middle and fine
meshing:
  level_set: 0
  resolution: 256 # change to 512 for higher resolution geometry
  eval_rec: False
  clean_mesh: True
  depth_test: False
  mesh_coarse_level: False
  clean_mesh_bound_scale: 1.02
  get_largest_components: False
  color_mesh_extraction_method: direct_point_query
  remove_small_geometry_threshold: 0.2
tracking:
  ignore_edge_W: 20
  ignore_edge_H: 20
  use_color_in_tracking: True
  device: "cuda:0"
  handle_dynamic: True
  vis_freq: 50
  vis_inside_freq: 25
  w_color_loss: 0.5
  seperate_LR: False
  const_speed_assumption: False
  no_vis_on_first_frame: True
  gt_camera: False
  lr: 0.001
  pixels: 200
  iters: 10
mapping:
  device: "cuda:0"
  color_refine: True
  middle_iter_ratio: 0.4
  fine_iter_ratio: 0.6
  every_frame: 5
  BA: True
  BA_cam_lr: 0.001
  fix_fine: True
  fix_color: False
  no_vis_on_first_frame: True
  no_mesh_on_first_frame: True
  no_log_on_first_frame: True
  vis_freq: 50
  vis_inside_freq: 25 #each iteration 
  mesh_freq: 50
  ckpt_freq: 500
  keyframe_every: 50
  mapping_window_size: 5
  w_color_loss: 0.2
  frustum_feature_selection: True
  keyframe_selection_method: 'overlap'
  save_selected_keyframes_info: False
  lr_first_factor: 5
  lr_factor: 1
  pixels: 1000
  iters_first: 1500
  iters: 60
  stage:
    coarse:
      decoders_lr: 0.0
      coarse_lr: 0.001
      middle_lr: 0.0
      fine_lr: 0.0
      color_lr: 0.0
    middle:
      decoders_lr: 0.0
      coarse_lr: 0.0
      middle_lr: 0.1
      fine_lr: 0.0
      color_lr: 0.0
    fine:
      decoders_lr: 0.0
      coarse_lr: 0.0
      middle_lr: 0.005
      fine_lr: 0.005
      color_lr: 0.0
    color:
      decoders_lr: 0.005
      coarse_lr: 0.0
      middle_lr: 0.005
      fine_lr: 0.005
      color_lr: 0.005
cam:
  H: 680
  W: 1200
  fx: 600.0
  fy: 600.0
  cx: 599.5
  cy: 339.5
  png_depth_scale: 6553.5 #for depth image in png format
  crop_edge: 0
rendering:
  N_samples: 32
  N_surface: 16
  N_importance: 0
  lindisp: False
  perturb: 0.0
data:
  dim: 3
model:
  c_dim: 32
  coarse_bound_enlarge: 2
  pos_embedding_method: fourier
wandb_dir: "./output"

Pose_Net:
  freq : 5
  min_time : 0
  max_time : 1999
  layers_feat : [None,256,256,256,256,256,256,256,256]

PoseGrid:
  PoseNet_freq: 5
  layers_feat: [null, 256, 256, 256, 256, 256, 256, 256, 256]
  skip: [4]
  positional_encoding: True # slightly better with PE
  # pretrained_decoder: pretrained/posedecoder_withPE_onlyBx_epoch_49.pt
  pretrained_decoder: pretrained/80k_randompose_epoch_49.pt
  pretrained_B: pretrained/pretrained_B.npy
  only_Bx: True # use Bx also as By & Bz for its expressiveness
  fix_decoder: True
  fit_poses: True # let PoseGrid learn the gt poses directly. Only for debugging
  decoder_lr: 0.001
  # pose_enc_lr: 0.005
  trans_enc_lr: 0.005
  quat_enc_lr: 0.001
  # trans_enc_lr: 0.05
  # quat_enc_lr: 0.01
  # prime_lr: 0.01
  trans_prime_lr: 0.01
  quat_prime_lr: 0.002